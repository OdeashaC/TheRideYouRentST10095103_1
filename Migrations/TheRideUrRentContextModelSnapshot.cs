// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheRideYouRentST10095103_1.Models;

#nullable disable

namespace TheRideYouRentST10095103_1.Migrations
{
    [DbContext(typeof(TheRideUrRentContext))]
    partial class TheRideUrRentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Car", b =>
                {
                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Car_No");

                    b.Property<string>("Available")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CarBodyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CarBodyTypeID");

                    b.Property<int>("CarMakeId")
                        .HasColumnType("int")
                        .HasColumnName("CarMakeID");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("KilometresTravelled")
                        .HasColumnType("int");

                    b.Property<int>("ServiceKilometres")
                        .HasColumnType("int");

                    b.HasKey("CarNo")
                        .HasName("PK__Car__52362C6AE703E4E1");

                    b.HasIndex("CarBodyTypeId");

                    b.HasIndex("CarMakeId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.CarBodyType", b =>
                {
                    b.Property<int>("CarBodyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarBodyTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBodyTypeId"));

                    b.Property<string>("CarBodyTypeDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CarBodyTypeId")
                        .HasName("PK__CarBodyT__2BA49AEBC687853F");

                    b.ToTable("CarBodyType", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.CarMake", b =>
                {
                    b.Property<int>("CarMakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarMakeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarMakeId"));

                    b.Property<string>("CarMakeDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CarMakeId")
                        .HasName("PK__CarMake__A125EE7C5138D4A0");

                    b.ToTable("CarMake", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("DriverAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Driver_Address");

                    b.Property<string>("DriverEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Driver_Email");

                    b.Property<string>("DriverMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Driver_Mobile");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Driver_Name");

                    b.HasKey("DriverId")
                        .HasName("PK__Driver__F1B1CD246E2D936D");

                    b.ToTable("Driver", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Inspector", b =>
                {
                    b.Property<string>("InspectorNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Inspector_no");

                    b.Property<string>("InspectorEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Inspector_Email");

                    b.Property<string>("InspectorMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Inspector_Mobile");

                    b.Property<string>("InspectorName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Inspector_Name");

                    b.HasKey("InspectorNo")
                        .HasName("PK__Inspecto__F49FBEAFAAC179A4");

                    b.ToTable("Inspector", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Rental", b =>
                {
                    b.Property<int>("RentalNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Rental_No");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalNo"));

                    b.Property<string>("CarNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Car_No");

                    b.Property<int>("Driverid")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("InspectorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Inspector_no");

                    b.Property<int>("RentalFee")
                        .HasColumnType("int")
                        .HasColumnName("Rental_Fee");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("RentalNo")
                        .HasName("PK__Rental__9D238DBDD99C8D3B");

                    b.HasIndex("CarNo");

                    b.HasIndex("Driverid");

                    b.HasIndex("InspectorNo");

                    b.ToTable("Rental", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.ReturnCar", b =>
                {
                    b.Property<int>("ReturnNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Return_No");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnNo"));

                    b.Property<string>("CarNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Car_No");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<int?>("ElapsedDate")
                        .HasColumnType("int")
                        .HasColumnName("Elapsed_Date");

                    b.Property<int?>("Fine")
                        .HasColumnType("int");

                    b.Property<string>("InspectorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Inspector_no");

                    b.Property<int>("RentalNo")
                        .HasColumnType("int")
                        .HasColumnName("Rental_No");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("Return_Date");

                    b.HasKey("ReturnNo")
                        .HasName("PK__ReturnCa__0F4F6B99A0E9E958");

                    b.HasIndex("CarNo");

                    b.HasIndex("DriverId");

                    b.HasIndex("InspectorNo");

                    b.HasIndex("RentalNo");

                    b.ToTable("ReturnCar", (string)null);
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Car", b =>
                {
                    b.HasOne("TheRideYouRentST10095103_1.Models.CarBodyType", "CarBodyType")
                        .WithMany("Cars")
                        .HasForeignKey("CarBodyTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Car__CarBodyType__403A8C7D");

                    b.HasOne("TheRideYouRentST10095103_1.Models.CarMake", "CarMake")
                        .WithMany("Cars")
                        .HasForeignKey("CarMakeId")
                        .IsRequired()
                        .HasConstraintName("FK__Car__CarMakeID__3F466844");

                    b.Navigation("CarBodyType");

                    b.Navigation("CarMake");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Rental", b =>
                {
                    b.HasOne("TheRideYouRentST10095103_1.Models.Car", "CarNoNavigation")
                        .WithMany("Rentals")
                        .HasForeignKey("CarNo")
                        .IsRequired()
                        .HasConstraintName("FK__Rental__Car_No__44FF419A");

                    b.HasOne("TheRideYouRentST10095103_1.Models.Driver", "Driver")
                        .WithMany("Rentals")
                        .HasForeignKey("Driverid")
                        .IsRequired()
                        .HasConstraintName("FK__Rental__Driverid__4316F928");

                    b.HasOne("TheRideYouRentST10095103_1.Models.Inspector", "InspectorNoNavigation")
                        .WithMany("Rentals")
                        .HasForeignKey("InspectorNo")
                        .IsRequired()
                        .HasConstraintName("FK__Rental__Inspecto__440B1D61");

                    b.Navigation("CarNoNavigation");

                    b.Navigation("Driver");

                    b.Navigation("InspectorNoNavigation");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.ReturnCar", b =>
                {
                    b.HasOne("TheRideYouRentST10095103_1.Models.Car", "CarNoNavigation")
                        .WithMany("ReturnCars")
                        .HasForeignKey("CarNo")
                        .IsRequired()
                        .HasConstraintName("FK__ReturnCar__Car_N__49C3F6B7");

                    b.HasOne("TheRideYouRentST10095103_1.Models.Driver", "Driver")
                        .WithMany("ReturnCars")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__ReturnCar__Drive__47DBAE45");

                    b.HasOne("TheRideYouRentST10095103_1.Models.Inspector", "InspectorNoNavigation")
                        .WithMany("ReturnCars")
                        .HasForeignKey("InspectorNo")
                        .IsRequired()
                        .HasConstraintName("FK__ReturnCar__Inspe__48CFD27E");

                    b.HasOne("TheRideYouRentST10095103_1.Models.Rental", "RentalNoNavigation")
                        .WithMany("ReturnCars")
                        .HasForeignKey("RentalNo")
                        .IsRequired()
                        .HasConstraintName("FK__ReturnCar__Renta__4AB81AF0");

                    b.Navigation("CarNoNavigation");

                    b.Navigation("Driver");

                    b.Navigation("InspectorNoNavigation");

                    b.Navigation("RentalNoNavigation");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Car", b =>
                {
                    b.Navigation("Rentals");

                    b.Navigation("ReturnCars");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.CarBodyType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.CarMake", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Driver", b =>
                {
                    b.Navigation("Rentals");

                    b.Navigation("ReturnCars");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Inspector", b =>
                {
                    b.Navigation("Rentals");

                    b.Navigation("ReturnCars");
                });

            modelBuilder.Entity("TheRideYouRentST10095103_1.Models.Rental", b =>
                {
                    b.Navigation("ReturnCars");
                });
#pragma warning restore 612, 618
        }
    }
}
